[
    {
        "label": "tkinter",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tkinter",
        "description": "tkinter",
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "messagebox",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "messagebox",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "ttk",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "messagebox",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "messagebox",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "ClientApplication",
        "importPath": "ClientApplication",
        "description": "ClientApplication",
        "isExtraImport": true,
        "detail": "ClientApplication",
        "documentation": {}
    },
    {
        "label": "Tk",
        "importPath": "UI",
        "description": "UI",
        "isExtraImport": true,
        "detail": "UI",
        "documentation": {}
    },
    {
        "label": "InputHostIp",
        "importPath": "UI",
        "description": "UI",
        "isExtraImport": true,
        "detail": "UI",
        "documentation": {}
    },
    {
        "label": "LoadingScreen",
        "importPath": "UI",
        "description": "UI",
        "isExtraImport": true,
        "detail": "UI",
        "documentation": {}
    },
    {
        "label": "MainPage",
        "importPath": "UI",
        "description": "UI",
        "isExtraImport": true,
        "detail": "UI",
        "documentation": {}
    },
    {
        "label": "SocketClient",
        "importPath": "SocketClient",
        "description": "SocketClient",
        "isExtraImport": true,
        "detail": "SocketClient",
        "documentation": {}
    },
    {
        "label": "ModuleFinder",
        "importPath": "modulefinder",
        "description": "modulefinder",
        "isExtraImport": true,
        "detail": "modulefinder",
        "documentation": {}
    },
    {
        "label": "cx_Freeze",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cx_Freeze",
        "description": "cx_Freeze",
        "detail": "cx_Freeze",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "threading",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "threading",
        "description": "threading",
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "socket",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "socket",
        "description": "socket",
        "detail": "socket",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "Constants",
        "description": "Constants",
        "isExtraImport": true,
        "detail": "Constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "Constants",
        "description": "Constants",
        "isExtraImport": true,
        "detail": "Constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "Constants",
        "description": "Constants",
        "isExtraImport": true,
        "detail": "Constants",
        "documentation": {}
    },
    {
        "label": "ICON",
        "importPath": "Constants",
        "description": "Constants",
        "isExtraImport": true,
        "detail": "Constants",
        "documentation": {}
    },
    {
        "label": "sqlite3",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlite3",
        "description": "sqlite3",
        "detail": "sqlite3",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "process",
        "importPath": "fuzzywuzzy",
        "description": "fuzzywuzzy",
        "isExtraImport": true,
        "detail": "fuzzywuzzy",
        "documentation": {}
    },
    {
        "label": "process",
        "importPath": "fuzzywuzzy",
        "description": "fuzzywuzzy",
        "isExtraImport": true,
        "detail": "fuzzywuzzy",
        "documentation": {}
    },
    {
        "label": "windll",
        "importPath": "ctypes",
        "description": "ctypes",
        "isExtraImport": true,
        "detail": "ctypes",
        "documentation": {}
    },
    {
        "label": "Calendar",
        "importPath": "tkcalendar",
        "description": "tkcalendar",
        "isExtraImport": true,
        "detail": "tkcalendar",
        "documentation": {}
    },
    {
        "label": "DateEntry",
        "importPath": "tkcalendar",
        "description": "tkcalendar",
        "isExtraImport": true,
        "detail": "tkcalendar",
        "documentation": {}
    },
    {
        "label": "matplotlib.pyplot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.pyplot",
        "description": "matplotlib.pyplot",
        "detail": "matplotlib.pyplot",
        "documentation": {}
    },
    {
        "label": "matplotlib.dates",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.dates",
        "description": "matplotlib.dates",
        "detail": "matplotlib.dates",
        "documentation": {}
    },
    {
        "label": "matplotlib.ticker",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.ticker",
        "description": "matplotlib.ticker",
        "detail": "matplotlib.ticker",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "requests",
        "description": "requests",
        "isExtraImport": true,
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "ThirdPartyServerData",
        "importPath": "GetThirdPartyData",
        "description": "GetThirdPartyData",
        "isExtraImport": true,
        "detail": "GetThirdPartyData",
        "documentation": {}
    },
    {
        "label": "ThirdPartyServerData",
        "importPath": "GetThirdPartyData",
        "description": "GetThirdPartyData",
        "isExtraImport": true,
        "detail": "GetThirdPartyData",
        "documentation": {}
    },
    {
        "label": "ServerDatabase",
        "importPath": "ServerDatabase",
        "description": "ServerDatabase",
        "isExtraImport": true,
        "detail": "ServerDatabase",
        "documentation": {}
    },
    {
        "label": "ClientApplication",
        "kind": 6,
        "importPath": "Client.ClientApplication",
        "description": "Client.ClientApplication",
        "peekOfCode": "class ClientApplication:\n    def __init__(self,master,*args,**kwargs):\n        \"\"\"Khởi tạo\"\"\"\n        self.z = 0\n        self.root = master\n        self.client = SocketClient()\n        Tk.move_window(self.root)\n        self.client.set_app(self)\n        self.root.title(\"CLIENT\")\n        self.root.configure(bg = \"#3a7ff6\")",
        "detail": "Client.ClientApplication",
        "documentation": {}
    },
    {
        "label": "HEADER",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "HEADER = 64\nFORMAT = 'utf-8'\n\"\"\"Command\"\"\"\nLOGIN = \"!LOGIN\"\nSIGN_UP = \"!SIGN UP\"\nQUERY = \"!QUERY\"\nCHART = \"!CHART\"\nDISCONNECT_MESSAGE = \"!DISCONNECT\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "FORMAT",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "FORMAT = 'utf-8'\n\"\"\"Command\"\"\"\nLOGIN = \"!LOGIN\"\nSIGN_UP = \"!SIGN UP\"\nQUERY = \"!QUERY\"\nCHART = \"!CHART\"\nDISCONNECT_MESSAGE = \"!DISCONNECT\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "LOGIN",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "LOGIN = \"!LOGIN\"\nSIGN_UP = \"!SIGN UP\"\nQUERY = \"!QUERY\"\nCHART = \"!CHART\"\nDISCONNECT_MESSAGE = \"!DISCONNECT\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "SIGN_UP",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "SIGN_UP = \"!SIGN UP\"\nQUERY = \"!QUERY\"\nCHART = \"!CHART\"\nDISCONNECT_MESSAGE = \"!DISCONNECT\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "QUERY",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "QUERY = \"!QUERY\"\nCHART = \"!CHART\"\nDISCONNECT_MESSAGE = \"!DISCONNECT\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "CHART",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "CHART = \"!CHART\"\nDISCONNECT_MESSAGE = \"!DISCONNECT\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\nALREADY_LOGGED = \"Account has already logged in!\"",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "DISCONNECT_MESSAGE",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "DISCONNECT_MESSAGE = \"!DISCONNECT\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "FAIL",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "FAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "FOUND",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "FOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "NOT_FOUND",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "NOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nPATH_IMG = \"Images/\"",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "DONE",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "DONE = \"!DONE\"\nERROR = \"!ERROR\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nPATH_IMG = \"Images/\"\nIMG_LIST = {",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "ERROR",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "ERROR = \"!ERROR\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nPATH_IMG = \"Images/\"\nIMG_LIST = {\n        \"CLIENT_ICON\"       : [f\"{PATH_IMG}Client.ico\",None],",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "WRONG_PASSWORD",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "WRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nPATH_IMG = \"Images/\"\nIMG_LIST = {\n        \"CLIENT_ICON\"       : [f\"{PATH_IMG}Client.ico\",None],\n        \"GOLD_IMG\"          : [f\"{PATH_IMG}Gold_img.png\", None],",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "NOT_SIGN_UP",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "NOT_SIGN_UP = \"User is not registered!\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nPATH_IMG = \"Images/\"\nIMG_LIST = {\n        \"CLIENT_ICON\"       : [f\"{PATH_IMG}Client.ico\",None],\n        \"GOLD_IMG\"          : [f\"{PATH_IMG}Gold_img.png\", None],\n        \"HOST_INPUT\"        : [f\"{PATH_IMG}Host_input.png\", None],",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "ALREADY_LOGGED",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "ALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nPATH_IMG = \"Images/\"\nIMG_LIST = {\n        \"CLIENT_ICON\"       : [f\"{PATH_IMG}Client.ico\",None],\n        \"GOLD_IMG\"          : [f\"{PATH_IMG}Gold_img.png\", None],\n        \"HOST_INPUT\"        : [f\"{PATH_IMG}Host_input.png\", None],\n        \"TEXT_BOX\"          : [f\"{PATH_IMG}Text_box.png\", None],",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "LOGIN_MSG_SUCCESS",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "LOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nPATH_IMG = \"Images/\"\nIMG_LIST = {\n        \"CLIENT_ICON\"       : [f\"{PATH_IMG}Client.ico\",None],\n        \"GOLD_IMG\"          : [f\"{PATH_IMG}Gold_img.png\", None],\n        \"HOST_INPUT\"        : [f\"{PATH_IMG}Host_input.png\", None],\n        \"TEXT_BOX\"          : [f\"{PATH_IMG}Text_box.png\", None],\n        \"TEXT_BOX_GOLD_IMG\" : [f\"{PATH_IMG}Gold_input.png\",None],",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "SIGN_UP_SUCCESS",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "SIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nPATH_IMG = \"Images/\"\nIMG_LIST = {\n        \"CLIENT_ICON\"       : [f\"{PATH_IMG}Client.ico\",None],\n        \"GOLD_IMG\"          : [f\"{PATH_IMG}Gold_img.png\", None],\n        \"HOST_INPUT\"        : [f\"{PATH_IMG}Host_input.png\", None],\n        \"TEXT_BOX\"          : [f\"{PATH_IMG}Text_box.png\", None],\n        \"TEXT_BOX_GOLD_IMG\" : [f\"{PATH_IMG}Gold_input.png\",None],\n        \"DELETE_BUTTON\"     : [f\"{PATH_IMG}Delete_button.png\", None],",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "ALREADY_EXIT",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "ALREADY_EXIT = \"Account has already exited!\"\nPATH_IMG = \"Images/\"\nIMG_LIST = {\n        \"CLIENT_ICON\"       : [f\"{PATH_IMG}Client.ico\",None],\n        \"GOLD_IMG\"          : [f\"{PATH_IMG}Gold_img.png\", None],\n        \"HOST_INPUT\"        : [f\"{PATH_IMG}Host_input.png\", None],\n        \"TEXT_BOX\"          : [f\"{PATH_IMG}Text_box.png\", None],\n        \"TEXT_BOX_GOLD_IMG\" : [f\"{PATH_IMG}Gold_input.png\",None],\n        \"DELETE_BUTTON\"     : [f\"{PATH_IMG}Delete_button.png\", None],\n        \"SHOW_IMG\"          : [f\"{PATH_IMG}Show.png\", None],",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "PATH_IMG",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "PATH_IMG = \"Images/\"\nIMG_LIST = {\n        \"CLIENT_ICON\"       : [f\"{PATH_IMG}Client.ico\",None],\n        \"GOLD_IMG\"          : [f\"{PATH_IMG}Gold_img.png\", None],\n        \"HOST_INPUT\"        : [f\"{PATH_IMG}Host_input.png\", None],\n        \"TEXT_BOX\"          : [f\"{PATH_IMG}Text_box.png\", None],\n        \"TEXT_BOX_GOLD_IMG\" : [f\"{PATH_IMG}Gold_input.png\",None],\n        \"DELETE_BUTTON\"     : [f\"{PATH_IMG}Delete_button.png\", None],\n        \"SHOW_IMG\"          : [f\"{PATH_IMG}Show.png\", None],\n        \"HIDE_IMG\"          : [f\"{PATH_IMG}Hide.png\", None],",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "IMG_LIST",
        "kind": 5,
        "importPath": "Client.Constants",
        "description": "Client.Constants",
        "peekOfCode": "IMG_LIST = {\n        \"CLIENT_ICON\"       : [f\"{PATH_IMG}Client.ico\",None],\n        \"GOLD_IMG\"          : [f\"{PATH_IMG}Gold_img.png\", None],\n        \"HOST_INPUT\"        : [f\"{PATH_IMG}Host_input.png\", None],\n        \"TEXT_BOX\"          : [f\"{PATH_IMG}Text_box.png\", None],\n        \"TEXT_BOX_GOLD_IMG\" : [f\"{PATH_IMG}Gold_input.png\",None],\n        \"DELETE_BUTTON\"     : [f\"{PATH_IMG}Delete_button.png\", None],\n        \"SHOW_IMG\"          : [f\"{PATH_IMG}Show.png\", None],\n        \"HIDE_IMG\"          : [f\"{PATH_IMG}Hide.png\", None],\n        \"CREATE_ACC_IMG\"    : [f\"{PATH_IMG}Create_account.png\", None],",
        "detail": "Client.Constants",
        "documentation": {}
    },
    {
        "label": "finder",
        "kind": 5,
        "importPath": "Client.findModule",
        "description": "Client.findModule",
        "peekOfCode": "finder = ModuleFinder()\nfinder.run_script('Client.py')\nprint('Loaded modules:')\nfor name, mod in finder.modules.items():\n    print('%s: ' % name, end='')\n    print(','.join(list(mod.globalnames.keys())[:3]))\nprint('-'*50)\nprint('Modules not imported:')\nprint('\\n'.join(finder.badmodules.keys()))",
        "detail": "Client.findModule",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "Client.setup",
        "description": "Client.setup",
        "peekOfCode": "base = None\nif sys.platform == 'win32':\n    base = \"Win32Gui\"\nos.environ['TCL_LIBRARY'] = r'C:\\Users\\duong\\AppData\\Local\\Programs\\Python\\Python39\\tcl\\tcl8.6'\nos.environ['TK_LIBRARY'] = r'C:\\Users\\duong\\AppData\\Local\\Programs\\Python\\Python39\\tcl\\tk8.6'\nexecutables = [cx_Freeze.Executable(\"Client.py\",base=base,icon= \"Images/Client.ico\")]\ncx_Freeze.setup(\n    name = \"ClientApplication\",\n    options = {\"build_exe\" : {\n        \"packages\" : [",
        "detail": "Client.setup",
        "documentation": {}
    },
    {
        "label": "os.environ['TCL_LIBRARY']",
        "kind": 5,
        "importPath": "Client.setup",
        "description": "Client.setup",
        "peekOfCode": "os.environ['TCL_LIBRARY'] = r'C:\\Users\\duong\\AppData\\Local\\Programs\\Python\\Python39\\tcl\\tcl8.6'\nos.environ['TK_LIBRARY'] = r'C:\\Users\\duong\\AppData\\Local\\Programs\\Python\\Python39\\tcl\\tk8.6'\nexecutables = [cx_Freeze.Executable(\"Client.py\",base=base,icon= \"Images/Client.ico\")]\ncx_Freeze.setup(\n    name = \"ClientApplication\",\n    options = {\"build_exe\" : {\n        \"packages\" : [\n            \"socket\",\n            \"datetime\",\n            \"re\",",
        "detail": "Client.setup",
        "documentation": {}
    },
    {
        "label": "os.environ['TK_LIBRARY']",
        "kind": 5,
        "importPath": "Client.setup",
        "description": "Client.setup",
        "peekOfCode": "os.environ['TK_LIBRARY'] = r'C:\\Users\\duong\\AppData\\Local\\Programs\\Python\\Python39\\tcl\\tk8.6'\nexecutables = [cx_Freeze.Executable(\"Client.py\",base=base,icon= \"Images/Client.ico\")]\ncx_Freeze.setup(\n    name = \"ClientApplication\",\n    options = {\"build_exe\" : {\n        \"packages\" : [\n            \"socket\",\n            \"datetime\",\n            \"re\",\n            \"tkinter\",",
        "detail": "Client.setup",
        "documentation": {}
    },
    {
        "label": "executables",
        "kind": 5,
        "importPath": "Client.setup",
        "description": "Client.setup",
        "peekOfCode": "executables = [cx_Freeze.Executable(\"Client.py\",base=base,icon= \"Images/Client.ico\")]\ncx_Freeze.setup(\n    name = \"ClientApplication\",\n    options = {\"build_exe\" : {\n        \"packages\" : [\n            \"socket\",\n            \"datetime\",\n            \"re\",\n            \"tkinter\",\n            \"matplotlib\",",
        "detail": "Client.setup",
        "documentation": {}
    },
    {
        "label": "SocketClient",
        "kind": 6,
        "importPath": "Client.SocketClient",
        "description": "Client.SocketClient",
        "peekOfCode": "class SocketClient:\n    def __init__(self):\n        \"\"\"List bổ trợ\"\"\"\n        self.send_q = [] # List lưu yêu cầu của client\n        self.list_name_of_golds = [] # Lưu tên các loại vàng từ server\n        \"\"\"Cờ hiệu\"\"\"\n        self.login_status = False # Tình trạng đăng nhập của client\n        self.disconnect_flag = False # Cờ client bật lên client ngắt kết nối\n        self.listen = True # Lắng nghe từ server\n        \"\"\"Lưu dữ liệu tra cuối lần cuối cùng\"\"\"",
        "detail": "Client.SocketClient",
        "documentation": {}
    },
    {
        "label": "convertToBinaryData",
        "kind": 2,
        "importPath": "Client.SQLite3",
        "description": "Client.SQLite3",
        "peekOfCode": "def convertToBinaryData(filename):\n    # Convert digital data to binary format\n    with open(filename, 'rb') as file:\n        blobData = file.read()\n    return blobData\ndef insertBLOB(name, photo):\n    try:\n        sqliteConnection = sqlite3.connect(DIR +\"/Database.db\")\n        cursor = sqliteConnection.cursor()\n        print(\"Connected to SQLite\")",
        "detail": "Client.SQLite3",
        "documentation": {}
    },
    {
        "label": "insertBLOB",
        "kind": 2,
        "importPath": "Client.SQLite3",
        "description": "Client.SQLite3",
        "peekOfCode": "def insertBLOB(name, photo):\n    try:\n        sqliteConnection = sqlite3.connect(DIR +\"/Database.db\")\n        cursor = sqliteConnection.cursor()\n        print(\"Connected to SQLite\")\n        sqlite_insert_blob_query = \"\"\" INSERT INTO 'Images'\n                                  (Name, Photo) VALUES (?, ?)\"\"\"\n        empPhoto = convertToBinaryData(photo)\n        data_tuple = (name, empPhoto)\n        cursor.execute(sqlite_insert_blob_query, data_tuple)",
        "detail": "Client.SQLite3",
        "documentation": {}
    },
    {
        "label": "extract_picture",
        "kind": 2,
        "importPath": "Client.SQLite3",
        "description": "Client.SQLite3",
        "peekOfCode": "def extract_picture(name):\n    sqliteConnection = sqlite3.connect(DIR +\"/Database.db\")\n    cursor = sqliteConnection.cursor()\n    sql = \"\"\"SELECT Photo FROM Images WHERE id = 1 AND Name = ?\"\"\"\n    param = (name)\n    cursor.execute(sql, param)\n    result = cursor.fetchone()\n    print (result)\n    # filename = afile + ext\n    # with open(filename, 'wb') as output_file:",
        "detail": "Client.SQLite3",
        "documentation": {}
    },
    {
        "label": "DIR",
        "kind": 5,
        "importPath": "Client.SQLite3",
        "description": "Client.SQLite3",
        "peekOfCode": "DIR = os.path.dirname(__file__)\nprint(DIR)\ndef convertToBinaryData(filename):\n    # Convert digital data to binary format\n    with open(filename, 'rb') as file:\n        blobData = file.read()\n    return blobData\ndef insertBLOB(name, photo):\n    try:\n        sqliteConnection = sqlite3.connect(DIR +\"/Database.db\")",
        "detail": "Client.SQLite3",
        "documentation": {}
    },
    {
        "label": "AppImage",
        "kind": 6,
        "importPath": "Client.UI",
        "description": "Client.UI",
        "peekOfCode": "class AppImage:\n    def __init__(self):\n        return\n    def get(name):\n        if name in IMG_LIST:\n            if IMG_LIST[name][1] is None:\n                if name == \"GOLD_IMG\":\n                    img = Image.open(f\"{PATH_IMG}Gold_img.png\")\n                    img = img.resize((100, 100))\n                    IMG_LIST[name][1] = ImageTk.PhotoImage(img)",
        "detail": "Client.UI",
        "documentation": {}
    },
    {
        "label": "JustifyApp",
        "kind": 6,
        "importPath": "Client.UI",
        "description": "Client.UI",
        "peekOfCode": "class JustifyApp:\n    \"\"\"Hàm căn giữa chỉnh màn hình\"\"\"\n    def center(master, app_width, app_height):\n        SCREEN_HEIGHT = master.winfo_screenheight()\n        SCREEN_WIDTH = master.winfo_screenwidth()\n        x = (SCREEN_WIDTH/2) - (app_width/2)\n        y = (SCREEN_HEIGHT/2) - (app_height/2)\n        master.geometry(f\"{app_width}x{app_height}+{int(x)}+{int(y)}\")\n\"\"\"Hàm bổ trợ\"\"\"\nclass Tk(tk.Tk):",
        "detail": "Client.UI",
        "documentation": {}
    },
    {
        "label": "Tk",
        "kind": 6,
        "importPath": "Client.UI",
        "description": "Client.UI",
        "peekOfCode": "class Tk(tk.Tk):\n    \"\"\"Hàm di chuyển màn hình\"\"\"\n    lastClickX = 0\n    lastClickY = 0\n    def move_window(self):\n        \"\"\"Nguồn: https://stackoverflow.com/questions/63217105/tkinter-overridedirect-minimizing-and-windows-task-bar-issues\"\"\"\n        def SaveLastClickPos(event):\n            global lastClickX, lastClickY\n            lastClickX = event.x\n            lastClickY = event.y",
        "detail": "Client.UI",
        "documentation": {}
    },
    {
        "label": "LoadingScreen",
        "kind": 6,
        "importPath": "Client.UI",
        "description": "Client.UI",
        "peekOfCode": "class LoadingScreen():\n    \"\"\"Nguồn tham khảo: https://www.youtube.com/watch?v=nl0mePCxoGU&t=1s\"\"\"\n    def __init__(self,master,*args,**kwargs):\n        master.withdraw()\n        if \"time_live\" in kwargs:\n            self.time_live = kwargs.get(\"time_live\")\n        else:\n            self.time_live = 5\n        if \"x\" in kwargs:\n            self.info_x = kwargs.get(\"x\")",
        "detail": "Client.UI",
        "documentation": {}
    },
    {
        "label": "QueryGoldForm",
        "kind": 6,
        "importPath": "Client.UI",
        "description": "Client.UI",
        "peekOfCode": "class QueryGoldForm:\n    def __init__(self,app):\n        \"\"\"Xoá màn hình cũ đi\"\"\"\n        Tk.clear_frame(app.root)\n        \"\"\"Khởi tạo\"\"\"\n        self.app = app\n        self.root = app.root\n        self.client = app.client\n        \"\"\"Cờ hiệu\"\"\"\n        self.status = None",
        "detail": "Client.UI",
        "documentation": {}
    },
    {
        "label": "SignUpForm",
        "kind": 6,
        "importPath": "Client.UI",
        "description": "Client.UI",
        "peekOfCode": "class SignUpForm:\n    def __init__(self,app):\n        \"\"\"Xoá màn hình\"\"\"\n        Tk.clear_frame(app.root)\n        \"\"\"Khởi tạo\"\"\"\n        self.app = app\n        self.root = app.root\n        self.client = app.client\n        \"\"\"Kích thước chương trình\"\"\"\n        self.app_width = 600",
        "detail": "Client.UI",
        "documentation": {}
    },
    {
        "label": "LoginForm",
        "kind": 6,
        "importPath": "Client.UI",
        "description": "Client.UI",
        "peekOfCode": "class LoginForm:\n    def __init__(self,app):\n        \"\"\"Xoá màn hình\"\"\"\n        Tk.clear_frame(app.root)\n        \"\"\"Khởi tạo\"\"\"\n        self.app = app\n        self.root = app.root\n        self.client = app.client\n        \"\"\"Kích thước chương trình\"\"\"\n        self.app_width = 600",
        "detail": "Client.UI",
        "documentation": {}
    },
    {
        "label": "InputHostIp",
        "kind": 6,
        "importPath": "Client.UI",
        "description": "Client.UI",
        "peekOfCode": "class InputHostIp(tk.Frame):\n    def __init__(self,app):\n        \"\"\"Khởi tạo\"\"\"\n        self.app = app\n        self.root = app.root\n        self.client = app.client\n        self.app_width = 600\n        self.app_height = 300\n        \"\"\"ICON của chương trình\"\"\"\n        self.root.tk.call('wm', 'iconphoto', self.root._w, AppImage.get(\"CLIENT_ICON\"))",
        "detail": "Client.UI",
        "documentation": {}
    },
    {
        "label": "HEADER",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "HEADER = 64\nHOST = socket.gethostbyname(socket.gethostname())\nPORT = 5050\nADDR = (HOST,PORT)\nFORMAT = 'utf-8'\nCLIENT_DISCONNECT_MSG = \"Client has disconnected from server.\" \nDISCONNECT_MESSAGE = \"!DISCONNECT\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\n\"\"\"Command\"\"\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "HOST",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "HOST = socket.gethostbyname(socket.gethostname())\nPORT = 5050\nADDR = (HOST,PORT)\nFORMAT = 'utf-8'\nCLIENT_DISCONNECT_MSG = \"Client has disconnected from server.\" \nDISCONNECT_MESSAGE = \"!DISCONNECT\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\n\"\"\"Command\"\"\"\nLOGIN = \"!LOGIN\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "PORT",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "PORT = 5050\nADDR = (HOST,PORT)\nFORMAT = 'utf-8'\nCLIENT_DISCONNECT_MSG = \"Client has disconnected from server.\" \nDISCONNECT_MESSAGE = \"!DISCONNECT\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\n\"\"\"Command\"\"\"\nLOGIN = \"!LOGIN\"\nSIGN_UP = \"!SIGN UP\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "ADDR",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "ADDR = (HOST,PORT)\nFORMAT = 'utf-8'\nCLIENT_DISCONNECT_MSG = \"Client has disconnected from server.\" \nDISCONNECT_MESSAGE = \"!DISCONNECT\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\n\"\"\"Command\"\"\"\nLOGIN = \"!LOGIN\"\nSIGN_UP = \"!SIGN UP\"\nQUERY = \"!QUERY\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "FORMAT",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "FORMAT = 'utf-8'\nCLIENT_DISCONNECT_MSG = \"Client has disconnected from server.\" \nDISCONNECT_MESSAGE = \"!DISCONNECT\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\n\"\"\"Command\"\"\"\nLOGIN = \"!LOGIN\"\nSIGN_UP = \"!SIGN UP\"\nQUERY = \"!QUERY\"\nCHART = \"!CHART\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "CLIENT_DISCONNECT_MSG",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "CLIENT_DISCONNECT_MSG = \"Client has disconnected from server.\" \nDISCONNECT_MESSAGE = \"!DISCONNECT\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\n\"\"\"Command\"\"\"\nLOGIN = \"!LOGIN\"\nSIGN_UP = \"!SIGN UP\"\nQUERY = \"!QUERY\"\nCHART = \"!CHART\"\nALREADY_LOGGED = \"Account has already logged in!\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "DISCONNECT_MESSAGE",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "DISCONNECT_MESSAGE = \"!DISCONNECT\"\nWRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\n\"\"\"Command\"\"\"\nLOGIN = \"!LOGIN\"\nSIGN_UP = \"!SIGN UP\"\nQUERY = \"!QUERY\"\nCHART = \"!CHART\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "WRONG_PASSWORD",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "WRONG_PASSWORD = \"Login Failed! Username or password is incorrect\"\nNOT_SIGN_UP = \"User is not registered!\"\n\"\"\"Command\"\"\"\nLOGIN = \"!LOGIN\"\nSIGN_UP = \"!SIGN UP\"\nQUERY = \"!QUERY\"\nCHART = \"!CHART\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "NOT_SIGN_UP",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "NOT_SIGN_UP = \"User is not registered!\"\n\"\"\"Command\"\"\"\nLOGIN = \"!LOGIN\"\nSIGN_UP = \"!SIGN UP\"\nQUERY = \"!QUERY\"\nCHART = \"!CHART\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "LOGIN",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "LOGIN = \"!LOGIN\"\nSIGN_UP = \"!SIGN UP\"\nQUERY = \"!QUERY\"\nCHART = \"!CHART\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "SIGN_UP",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "SIGN_UP = \"!SIGN UP\"\nQUERY = \"!QUERY\"\nCHART = \"!CHART\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "QUERY",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "QUERY = \"!QUERY\"\nCHART = \"!CHART\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "CHART",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "CHART = \"!CHART\"\nALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "ALREADY_LOGGED",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "ALREADY_LOGGED = \"Account has already logged in!\"\nLOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nICON = 'Images\\Server.ico'",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "LOGIN_MSG_SUCCESS",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "LOGIN_MSG_SUCCESS = \"Login successful!\"\nSIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nICON = 'Images\\Server.ico'",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "SIGN_UP_SUCCESS",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "SIGN_UP_SUCCESS = \"Sign up successful!\"\nALREADY_EXIT = \"Account has already exited!\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nICON = 'Images\\Server.ico'",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "ALREADY_EXIT",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "ALREADY_EXIT = \"Account has already exited!\"\nFAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nICON = 'Images\\Server.ico'",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "FAIL",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "FAIL = \"!FAIL\"\nFOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nICON = 'Images\\Server.ico'",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "FOUND",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "FOUND = \"!FOUND\"\nNOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nICON = 'Images\\Server.ico'",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "NOT_FOUND",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "NOT_FOUND = \"!NOT FOUND\"\nDONE = \"!DONE\"\nERROR = \"!ERROR\"\nICON = 'Images\\Server.ico'",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "DONE",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "DONE = \"!DONE\"\nERROR = \"!ERROR\"\nICON = 'Images\\Server.ico'",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "ERROR",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "ERROR = \"!ERROR\"\nICON = 'Images\\Server.ico'",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "ICON",
        "kind": 5,
        "importPath": "Server.Constants",
        "description": "Server.Constants",
        "peekOfCode": "ICON = 'Images\\Server.ico'",
        "detail": "Server.Constants",
        "documentation": {}
    },
    {
        "label": "ThirdPartyServerData",
        "kind": 6,
        "importPath": "Server.GetThirdPartyData",
        "description": "Server.GetThirdPartyData",
        "peekOfCode": "class ThirdPartyServerData:\n    def __init__(self):\n        return\n    \"\"\"Hàm lấy giá vàng\"\"\"\n    def get_gold_list(date):\n        all_golds = {}\n        \"\"\"Sử dụng thư viện requests để lấy html response\"\"\"\n        URL = f\"https://tygia.com/api.php?column=0&cols=1&title=1&chart=0&gold=1&rate=0&expand=2&nganhang=VIETCOM&ngay={date}\"\n        try:\n            html_text = requests.get(URL).text",
        "detail": "Server.GetThirdPartyData",
        "documentation": {}
    },
    {
        "label": "SocketServer",
        "kind": 6,
        "importPath": "Server.Server",
        "description": "Server.Server",
        "peekOfCode": "class SocketServer:\n    def __init__(self):\n        \"\"\"Khởi tạo\"\"\"        \n        self.clients = {}\n        self.addresses = {}\n        self.receive_q = []\n    \"\"\"Setter của đối tượng\"\"\"\n    def set_gui(self,master):\n        self.app = master\n    \"\"\"Gửi dữ liệu đến client theo format gửi độ dài rồi gửi nội dung\"\"\"",
        "detail": "Server.Server",
        "documentation": {}
    },
    {
        "label": "ServerApplication",
        "kind": 6,
        "importPath": "Server.Server",
        "description": "Server.Server",
        "peekOfCode": "class ServerApplication():\n    def __init__(self,master):\n        \"\"\"Khởi tạo đối tượng\"\"\"\n        self.root = master\n        self.root.resizable(False,False)\n        self.main_page = MainPage(self.root)\n        self.database = ServerDatabase()\n        self.server = SocketServer()\n        self.server.set_gui(self.main_page)\n        self.server.start_server()",
        "detail": "Server.Server",
        "documentation": {}
    },
    {
        "label": "ServerDatabase",
        "kind": 6,
        "importPath": "Server.ServerDatabase",
        "description": "Server.ServerDatabase",
        "peekOfCode": "class ServerDatabase:\n    def __init__(self):\n        self.setup_database()\n        threading.Thread(target = self.update_datebase_30min_per_day,daemon = True).start()\n    \"\"\"Chuẩn bị cơ sở dữ liệu\"\"\"\n    def setup_database(self):\n        \"\"\"Kết nối đến database\"\"\"\n        try:\n            with sqlite3.connect(USER_DATABASE_PATH,check_same_thread=False) as conn:\n                cursor = conn.cursor()",
        "detail": "Server.ServerDatabase",
        "documentation": {}
    },
    {
        "label": "USER_DATABASE_PATH",
        "kind": 5,
        "importPath": "Server.ServerDatabase",
        "description": "Server.ServerDatabase",
        "peekOfCode": "USER_DATABASE_PATH =  \"Server Database\\Database.db\"\nGOLDS_DATABASE_PATH =  \"Server Database\\Golds.db\"\nclass ServerDatabase:\n    def __init__(self):\n        self.setup_database()\n        threading.Thread(target = self.update_datebase_30min_per_day,daemon = True).start()\n    \"\"\"Chuẩn bị cơ sở dữ liệu\"\"\"\n    def setup_database(self):\n        \"\"\"Kết nối đến database\"\"\"\n        try:",
        "detail": "Server.ServerDatabase",
        "documentation": {}
    },
    {
        "label": "GOLDS_DATABASE_PATH",
        "kind": 5,
        "importPath": "Server.ServerDatabase",
        "description": "Server.ServerDatabase",
        "peekOfCode": "GOLDS_DATABASE_PATH =  \"Server Database\\Golds.db\"\nclass ServerDatabase:\n    def __init__(self):\n        self.setup_database()\n        threading.Thread(target = self.update_datebase_30min_per_day,daemon = True).start()\n    \"\"\"Chuẩn bị cơ sở dữ liệu\"\"\"\n    def setup_database(self):\n        \"\"\"Kết nối đến database\"\"\"\n        try:\n            with sqlite3.connect(USER_DATABASE_PATH,check_same_thread=False) as conn:",
        "detail": "Server.ServerDatabase",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "Server.setup",
        "description": "Server.setup",
        "peekOfCode": "base = None\nif sys.platform == 'win32':\n    base = \"Win32Gui\"\nos.environ['TCL_LIBRARY'] = r'C:\\Users\\duong\\AppData\\Local\\Programs\\Python\\Python39\\tcl\\tcl8.6'\nos.environ['TK_LIBRARY'] = r'C:\\Users\\duong\\AppData\\Local\\Programs\\Python\\Python39\\tcl\\tk8.6'\nexecutables = [cx_Freeze.Executable(\"Server.py\",base=base,icon= \"Images/Server.ico\")]\ncx_Freeze.setup(\n    name = \"ServerApplication\",\n    options = {\"build_exe\" : {\n        \"packages\" : [",
        "detail": "Server.setup",
        "documentation": {}
    },
    {
        "label": "os.environ['TCL_LIBRARY']",
        "kind": 5,
        "importPath": "Server.setup",
        "description": "Server.setup",
        "peekOfCode": "os.environ['TCL_LIBRARY'] = r'C:\\Users\\duong\\AppData\\Local\\Programs\\Python\\Python39\\tcl\\tcl8.6'\nos.environ['TK_LIBRARY'] = r'C:\\Users\\duong\\AppData\\Local\\Programs\\Python\\Python39\\tcl\\tk8.6'\nexecutables = [cx_Freeze.Executable(\"Server.py\",base=base,icon= \"Images/Server.ico\")]\ncx_Freeze.setup(\n    name = \"ServerApplication\",\n    options = {\"build_exe\" : {\n        \"packages\" : [\n            \"tkinter\",\n            \"requests\",\n            \"sqlite3\",",
        "detail": "Server.setup",
        "documentation": {}
    },
    {
        "label": "os.environ['TK_LIBRARY']",
        "kind": 5,
        "importPath": "Server.setup",
        "description": "Server.setup",
        "peekOfCode": "os.environ['TK_LIBRARY'] = r'C:\\Users\\duong\\AppData\\Local\\Programs\\Python\\Python39\\tcl\\tk8.6'\nexecutables = [cx_Freeze.Executable(\"Server.py\",base=base,icon= \"Images/Server.ico\")]\ncx_Freeze.setup(\n    name = \"ServerApplication\",\n    options = {\"build_exe\" : {\n        \"packages\" : [\n            \"tkinter\",\n            \"requests\",\n            \"sqlite3\",\n            \"os\",",
        "detail": "Server.setup",
        "documentation": {}
    },
    {
        "label": "executables",
        "kind": 5,
        "importPath": "Server.setup",
        "description": "Server.setup",
        "peekOfCode": "executables = [cx_Freeze.Executable(\"Server.py\",base=base,icon= \"Images/Server.ico\")]\ncx_Freeze.setup(\n    name = \"ServerApplication\",\n    options = {\"build_exe\" : {\n        \"packages\" : [\n            \"tkinter\",\n            \"requests\",\n            \"sqlite3\",\n            \"os\",\n            \"threading\",",
        "detail": "Server.setup",
        "documentation": {}
    },
    {
        "label": "LoadingScreen",
        "kind": 6,
        "importPath": "Server.UI",
        "description": "Server.UI",
        "peekOfCode": "class LoadingScreen():\n    def __init__(self,master,*args,**kwargs):\n        if \"time_live\" in kwargs:\n            self.time_live = kwargs.get(\"time_live\")\n        else:\n            self.time_live = 5\n        self.root = tk.Toplevel(master)\n        self.master = master\n        self.master.withdraw()\n        self.app_width = 350",
        "detail": "Server.UI",
        "documentation": {}
    },
    {
        "label": "MainPage",
        "kind": 6,
        "importPath": "Server.UI",
        "description": "Server.UI",
        "peekOfCode": "class MainPage:\n    def __init__(self,master):\n        self.root = master\n        self.root.title(\"SERVER\")\n        self.root.iconbitmap(f\"{ICON}\")\n        self.disconnect_flag = False\n        \"\"\"Kích thước của app\"\"\"\n        self.app_height = 400\n        self.app_width = 621\n        center(self.root,self.app_width,self.app_height)",
        "detail": "Server.UI",
        "documentation": {}
    },
    {
        "label": "center",
        "kind": 2,
        "importPath": "Server.UI",
        "description": "Server.UI",
        "peekOfCode": "def center(master,app_width,app_height):\n    SCREEN_HEIGHT = master.winfo_screenheight()\n    SCREEN_WIDTH = master.winfo_screenwidth()\n    x = (SCREEN_WIDTH/2) - (app_width/2)  \n    y = (SCREEN_HEIGHT/2) - (app_height/2)\n    master.geometry(f\"{app_width}x{app_height}+{int(x)}+{int(y)}\")   \n\"\"\"Thanh tiến trình\"\"\"\nclass LoadingScreen():\n    def __init__(self,master,*args,**kwargs):\n        if \"time_live\" in kwargs:",
        "detail": "Server.UI",
        "documentation": {}
    }
]